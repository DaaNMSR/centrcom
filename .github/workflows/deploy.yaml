name: Deploy to Server

on:
  push:
    branches: [main]

env:
  REMOTE_HOST: 89.111.171.148
  REMOTE_USER: root
  PROJECT_PATH: /var/www/fo
  MOCK_PATH: /var/www/mock-server

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install dependencies for mock-server
        working-directory: ./mock-server
        run: yarn install --frozen-lockfile

      - name: Build project
        run: yarn build

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create remote folders if not exist
        run: |
          ssh -o StrictHostKeyChecking=no ${{ env.REMOTE_USER }}@${{ env.REMOTE_HOST }} << 'ENDSSH'
            mkdir -p ${{ env.PROJECT_PATH }}
            mkdir -p ${{ env.MOCK_PATH }}
          ENDSSH

      - name: Upload build to server
        run: rsync -az --delete ./dist/ ${{ env.REMOTE_USER }}@${{ env.REMOTE_HOST }}:${{ env.PROJECT_PATH }}/

      - name: Upload mock-server to server
        run: rsync -az ./mock-server/ ${{ env.REMOTE_USER }}@${{ env.REMOTE_HOST }}:${{ env.MOCK_PATH }}/

      - name: Upload .env file to server
        run: rsync -az ./mock-server/.env ${{ env.REMOTE_USER }}@${{ env.REMOTE_HOST }}:${{ env.MOCK_PATH }}/

      - name: Install and start mock-server on server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ env.REMOTE_USER }}@${{ env.REMOTE_HOST }} << 'ENDSSH'
            cd ${{ env.MOCK_PATH }}

            export NODE_ENV=production
            export HOST=0.0.0.0
            export PORT=3001
            export PROTOCOL=https
            export SSL_KEY_PATH=/etc/letsencrypt/live/fo.centrkom174.ru/privkey.pem
            export SSL_CERT_PATH=/etc/letsencrypt/live/fo.centrkom174.ru/fullchain.pem

            if ! command -v yarn &> /dev/null; then
              npm install -g yarn
            fi
            yarn install --frozen-lockfile

            npm install -g pm2

            pm2 delete mock-server || true
            pm2 start dist/index.js --name mock-server --update-env
            pm2 save
          ENDSSH